{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppProvider = exports.DocViewerContext = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar actions_1 = require(\"./actions\");\n\nvar reducer_1 = require(\"./reducer\");\n\nvar DocViewerContext = react_1.createContext({\n  state: reducer_1.initialState,\n  dispatch: function () {\n    return null;\n  }\n});\nexports.DocViewerContext = DocViewerContext;\n\nvar AppProvider = function (props) {\n  var children = props.children,\n      documents = props.documents,\n      config = props.config,\n      pluginRenderers = props.pluginRenderers;\n\n  var _a = react_1.useReducer(reducer_1.mainStateReducer, __assign(__assign({}, reducer_1.initialState), {\n    documents: documents || [],\n    currentDocument: documents && documents.length ? documents[0] : undefined,\n    config: config,\n    pluginRenderers: pluginRenderers\n  })),\n      state = _a[0],\n      dispatch = _a[1]; // On inital load, and whenever they change,\n  // replace documents with the new props passed in\n\n\n  react_1.useEffect(function () {\n    dispatch(actions_1.setAllDocuments(documents));\n    config && dispatch(actions_1.setMainConfig(config));\n  }, [documents]);\n  return react_1.default.createElement(DocViewerContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};\n\nexports.AppProvider = AppProvider;","map":null,"metadata":{},"sourceType":"script"}